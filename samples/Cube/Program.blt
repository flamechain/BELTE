
decimal! A = 0;
decimal! B = 0;
decimal! C = 0;

decimal! K1 = 40;

decimal! x = 0;
decimal! y = 0;
decimal! z = 0;

decimal! ooz = 0;
int! xp = 0;
int! yp = 0;
int! idx;

constexpr int! CubeWidth = 10;
constexpr int! Width = 160;
constexpr int! Height = 44;
constexpr char! BackgroundASCIICode = ' ';
constexpr decimal! IncrementSpeed = 0.6;
constexpr int! DistanceFromCam = 60;

decimal! CalculateX(int! i, int! j, int! k) {
    return j * Math.Sin(A) * Math.Sin(B) * Math.Cos(C) - k * Math.Cos(A) * Math.Sin(B) * Math.Cos(C) +
           j * Math.Cos(A) * Math.Sin(C) + k * Math.Sin(A) * Math.Sin(C) + i * Math.Cos(B) * Math.Cos(C);
}

decimal! CalculateY(int! i, int! j, int! k) {
    return j * Math.Cos(A) * Math.Cos(C) + k * Math.Sin(A) * Math.Cos(C) -
           j * Math.Sin(A) * Math.Sin(B) * Math.Sin(C) + k * Math.Cos(A) * Math.Sin(B) * Math.Sin(C) -
           i * Math.Cos(B) * Math.Sin(C);
}

decimal! CalculateZ(int! i, int! j, int! k) {
    return k * Math.Cos(A) * Math.Cos(B) - j * Math.Sin(A) * Math.Cos(B) + i * Math.Sin(B);
}

void CalculateForSurface(decimal! cubeX, decimal! cubeY, decimal! cubeZ, char! character) {
    x = CalculateX((int!)cubeX, (int!)cubeY, (int!)cubeZ);
    y = CalculateX((int!)cubeX, (int!)cubeY, (int!)cubeZ);
    z = CalculateX((int!)cubeX, (int!)cubeY, (int!)cubeZ) + DistanceFromCam;

    ooz = 1 / z!;
    xp = (int!)(Width / 2 + K1 * ooz * x * 2);
    yp = (int!)(Height / 2 + K1 * ooz * y);

    idx = xp + yp * Width;

    if (idx >= 0 && idx < Width * Height) {
        if (ooz > zBuffer[idx]) {
            zBuffer[idx] = ooz;
            buffer[idx] = character;
        }
    }
}

List<char!> buffer = new List<char!>(160 * 44);
List<decimal!> zBuffer = new List<decimal!>(160 * 44);

while (true) {
    buffer.Fill(BackgroundASCIICode);
    zBuffer.Fill(0);

    for (decimal! cubeX = -CubeWidth; cubeX < CubeWidth; cubeX += IncrementSpeed) {
        for (decimal! cubeY = -CubeWidth; cubeY < CubeWidth; cubeY += IncrementSpeed) {
            CalculateForSurface(cubeX, cubeY, -CubeWidth, '#');
        }
    }

    Console.SetCursorPosition(0, 0);

    for (int! k = 0; k < Width * Height; k++)
        Console.Print(k % Width == 0 ? (any!)Char(10) : buffer[k]);

    A += 0.005;
    B += 0.005;
}
