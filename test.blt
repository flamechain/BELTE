struct TypeTests {
    int int11;
    [NotNull]int int21;
    int[] int31;
    [NotNull]int[] int41;

    bool bool11;
    [NotNull]bool bool21;
    bool[] bool31;
    [NotNull]bool[] bool41;

    string string11;
    [NotNull]string string21;
    string[] string31;
    [NotNull]string[] string41;

    decimal decimal11;
    [NotNull]decimal decimal21;
    decimal[] decimal31;
    [NotNull]decimal[] decimal41;

    ref int int12;
    [NotNull]ref int int22;
    ref int[] int32;
    [NotNull]ref int[] int42;

    ref bool bool12;
    [NotNull]ref bool bool22;
    ref bool[] bool32;
    [NotNull]ref bool[] bool42;

    ref string string12;
    [NotNull]ref string string22;
    ref string[] string32;
    [NotNull]ref string[] string42;

    ref decimal decimal12;
    [NotNull]ref decimal decimal22;
    ref decimal[] decimal32;
    [NotNull]ref decimal[] decimal42;

    const ref int int15;
    [NotNull]const ref int int25;
    const ref int[] int35;
    [NotNull]const ref int[] int45;

    const ref bool bool15;
    [NotNull]const ref bool bool25;
    const ref bool[] bool35;
    [NotNull]const ref bool[] bool45;

    const ref string string15;
    [NotNull]const ref string string25;
    const ref string[] string35;
    [NotNull]const ref string[] string45;

    const ref decimal decimal15;
    [NotNull]const ref decimal decimal25;
    const ref decimal[] decimal35;
    [NotNull]const ref decimal[] decimal45;
}

void Main() {
    OutputTests();
}

void OutputTests() {
    PrintLine(ParameterTests({1, 2, 3}, "test"));
}

[NotNull]int[] ParameterTests([NotNull]int[] a, string b, bool c = false) {
    return a;
}
