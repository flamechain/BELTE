TODO

    * Implement InterfaceBase
    * Implement TypeBase
    * Add docstrings to InterfaceBase & TypeBase & System Libraries
    * Add base inherited interfaces to base types

    * Add Parser
    * Finish Lexer
    * Add file exists checking for input files

    * remove <> auto closing
    * Add keywords for pragma statements (warning, entry)
    * String interpolation regex
    * preprocessor constant regex
    * fix doxygen comment regex to highlight
    * type followed by () use function highlighting (for basic type declarations)
    * intellisense for extension
    * fix extension example image
    * add new built-in types to regex
    * add &&, ||, ! and word counterparts
    * add yellow highlighting to <name>.<something> name if enum, remove if not
    * make class constructors not look like functions (intellisense probably)

    * add Consistency to Ilities

Outside Ideas:

    * customizable types with restraints, regex with strings
    * reflection .net, typeof, nameof
    * enums with strings
    * decorators
    * switch over string
    * enum have multiple fields
    * ability to add enum entries at code-time
