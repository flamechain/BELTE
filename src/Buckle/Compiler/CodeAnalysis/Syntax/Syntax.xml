<?xml version="1.0" encoding="utf-8"?>
<Tree Root="SyntaxNode">
  <!-- Predefined and abstract nodes -->
  <PredefinedNode Name="SyntaxToken"/>
  <PredefinedNode Name="SyntaxTrivia"/>
  <AbstractNode Name="ExpressionSyntax" Base="SyntaxNode"/>
  <AbstractNode Name="MemberSyntax" Base="SyntaxNode"/>
  <AbstractNode Name="StatementSyntax" Base="SyntaxNode"/>
  <AbstractNode Name="TypeDeclarationSyntax" Base="MemberSyntax">
    <Field Name="keyword" Type="SyntaxToken"/>
    <Field Name="identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="templateParameterList" Type="TemplateParameterListSyntax" Optional="True"/>
    <Field Name="openBrace" Type="SyntaxToken">
      <Kind Name="OpenBraceToken"/>
    </Field>
    <Field Name="members" Type="SyntaxList&lt;MemberSyntax&gt;"/>
    <Field Name="closeBrace" Type="SyntaxToken">
      <Kind Name="CloseBraceToken"/>
    </Field>
  </AbstractNode>
  <AbstractNode Name="NameExpressionSyntax" Base="ExpressionSyntax">
    <Field Name="identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken"/>
    </Field>
  </AbstractNode>
  <!-- Other general nodes -->
  <Node Name="ArgumentSyntax" Base="SyntaxNode">
    <Kind Name="Argument"/>
    <Field Name="identifier" Type="SyntaxToken" Optional="True">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="colon" Type="SyntaxToken" Optional="True">
      <Kind Name="ColonToken"/>
    </Field>
    <Field Name="expression" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="ArgumentListSyntax" Base="SyntaxNode">
    <Kind Name="ArgumentList"/>
    <Field Name="openParenthesis" Type="SyntaxToken">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="arguments" Type="SeparatedSyntaxList&lt;ArgumentSyntax&gt;"/>
    <Field Name="closeParenthesis" Type="SyntaxToken">
      <Kind Name="CloseParenToken"/>
    </Field>
  </Node>
  <Node Name="ArrayRankSpecifierSyntax" Base="SyntaxNode">
    <Kind Name="ArrayRankSpecifier"/>
    <Field Name="openBracket" Type="SyntaxToken">
      <Kind Name="OpenBracketToken"/>
    </Field>
    <Field Name="closeBracket" Type="SyntaxToken">
      <Kind Name="CloseBracketToken"/>
    </Field>
  </Node>
  <Node Name="AttributeSyntax" Base="SyntaxNode">
    <Kind Name="Attribute"/>
    <Field Name="openBracket" Type="SyntaxToken">
      <Kind Name="OpenBracketToken"/>
    </Field>
    <Field Name="identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="closeBracket" Type="SyntaxToken">
      <Kind Name="CloseBracketToken"/>
    </Field>
  </Node>
  <Node Name="CatchClauseSyntax" Base="SyntaxNode">
    <Kind Name="CatchClause"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="CatchKeyword"/>
    </Field>
    <Field Name="body" Type="BlockStatementSyntax"/>
  </Node>
  <Node Name="CompilationUnitSyntax" Base="SyntaxNode">
    <Kind Name="CompilationUnit"/>
    <Field Name="members" Type="SyntaxList&lt;MemberSyntax&gt;"/>
    <Field Name="endOfFile" Type="SyntaxToken">
      <Kind Name="EndOfFileToken"/>
    </Field>
  </Node>
  <Node Name="ElseClauseSyntax" Base="SyntaxNode">
    <Kind Name="ElseClause"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="ElseKeyword"/>
    </Field>
    <Field Name="body" Type="StatementSyntax"/>
  </Node>
  <Node Name="FinallyClauseSyntax" Base="SyntaxNode">
    <Kind Name="FinallyClause"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="FinallyKeyword"/>
    </Field>
    <Field Name="body" Type="BlockStatementSyntax"/>
  </Node>
  <Node Name="ParameterSyntax" Base="SyntaxNode">
    <Kind Name="Parameter"/>
    <Field Name="type" Type="TypeSyntax"/>
    <Field Name="identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="equals" Type="SyntaxToken" Optional="True">
      <Kind Name="EqualsToken"/>
    </Field>
    <Field Name="defaultValue" Type="ExpressionSyntax" Optional="True"/>
  </Node>
  <Node Name="ParameterListSyntax" Base="SyntaxNode">
    <Kind Name="ParameterList"/>
    <Field Name="openParenthesis" Type="SyntaxToken">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="parameters" Type="SeparatedSyntaxList&lt;ParameterSyntax&gt;"/>
    <Field Name="closeParenthesis" Type="SyntaxToken">
      <Kind Name="CloseParenToken"/>
    </Field>
  </Node>
  <Node Name="TemplateArgumentListSyntax" Base="SyntaxNode">
    <Kind Name="TemplateArgumentList"/>
    <Field Name="openAngleBracket" Type="SyntaxToken">
      <Kind Name="LessThanToken"/>
    </Field>
    <Field Name="arguments" Type="SeparatedSyntaxList&lt;ArgumentSyntax&gt;"/>
    <Field Name="closeAngleBracket" Type="SyntaxToken">
      <Kind Name="GreaterThanToken"/>
    </Field>
  </Node>
  <Node Name="TemplateParameterListSyntax" Base="SyntaxNode">
    <Kind Name="TemplateParameterList"/>
    <Field Name="openAngleBracket" Type="SyntaxToken">
      <Kind Name="LessThanToken"/>
    </Field>
    <Field Name="parameters" Type="SeparatedSyntaxList&lt;ParameterSyntax&gt;"/>
    <Field Name="closeAngleBracket" Type="SyntaxToken">
      <Kind Name="GreaterThanToken"/>
    </Field>
  </Node>
  <Node Name="TypeSyntax" Base="SyntaxNode">
    <Kind Name="Type"/>
    <Field Name="attributes" Type="SyntaxList&lt;AttributeSyntax&gt;"/>
    <Field Name="constRefKeyword" Type="SyntaxToken" Optional="True">
      <Kind Name="ConstKeyword"/>
    </Field>
    <Field Name="refKeyword" Type="SyntaxToken" Optional="True">
      <Kind Name="RefKeyword"/>
    </Field>
    <Field Name="constKeyword" Type="SyntaxToken" Optional="True">
      <Kind Name="ConstKeyword"/>
    </Field>
    <Field Name="varKeyword" Type="SyntaxToken" Optional="True">
      <Kind Name="VarKeyword"/>
    </Field>
    <Field Name="typeName" Type="SyntaxToken" Optional="True">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="templateArgumentList" Type="TemplateArgumentListSyntax" Optional="True"/>
    <Field Name="rankSpecifiers" Type="SyntaxList&lt;ArrayRankSpecifierSyntax&gt;"/>
  </Node>
  <!-- Members -->
  <Node Name="ClassDeclarationSyntax" Base="TypeDeclarationSyntax">
    <Kind Name="ClassDeclaration"/>
    <Field Name="keyword" Type="SyntaxToken" Override="True">
      <Kind Name="ClassKeyword"/>
    </Field>
    <Field Name="identifier" Type="SyntaxToken" Override="True">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="templateParameterList" Type="TemplateParameterListSyntax" Override="True" Optional="True"/>
    <Field Name="openBrace" Type="SyntaxToken" Override="True">
      <Kind Name="OpenBraceToken"/>
    </Field>
    <Field Name="members" Type="SyntaxList&lt;MemberSyntax&gt;" Override="True"/>
    <Field Name="closeBrace" Type="SyntaxToken" Override="True">
      <Kind Name="CloseBraceToken"/>
    </Field>
  </Node>
  <Node Name="FieldDeclarationSyntax" Base="MemberSyntax">
    <Kind Name="FieldDeclaration"/>
    <Field Name="declaration" Type="VariableDeclarationStatementSyntax"/>
  </Node>
  <Node Name="GlobalStatementSyntax" Base="MemberSyntax">
    <Kind Name="GlobalStatement"/>
    <Field Name="statement" Type="StatementSyntax"/>
  </Node>
  <Node Name="MethodDeclarationSyntax" Base="MemberSyntax">
    <Kind Name="MethodDeclaration"/>
    <Field Name="returnType" Type="TypeSyntax"/>
    <Field Name="identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="parameterList" Type="ParameterListSyntax"/>
    <Field Name="body" Type="BlockStatementSyntax"/>
  </Node>
  <Node Name="StructDeclarationSyntax" Base="TypeDeclarationSyntax">
    <Kind Name="StructDeclaration"/>
    <Field Name="keyword" Type="SyntaxToken" Override="True">
      <Kind Name="StructKeyword"/>
    </Field>
    <Field Name="identifier" Type="SyntaxToken" Override="True">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="templateParameterList" Type="TemplateParameterListSyntax" Override="True" Optional="True"/>
    <Field Name="openBrace" Type="SyntaxToken" Override="True">
      <Kind Name="OpenBraceToken"/>
    </Field>
    <Field Name="members" Type="SyntaxList&lt;MemberSyntax&gt;" Override="True"/>
    <Field Name="closeBrace" Type="SyntaxToken" Override="True">
      <Kind Name="CloseBraceToken"/>
    </Field>
  </Node>
  <!-- Expressions -->
  <Node Name="AssignmentExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="AssignmentExpression"/>
    <Field Name="left" Type="ExpressionSyntax"/>
    <Field Name="assignmentToken" Type="SyntaxToken"/>
    <Field Name="right" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="BinaryExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="BinaryExpression"/>
    <Field Name="left" Type="ExpressionSyntax"/>
    <Field Name="op" Type="SyntaxToken"/>
    <Field Name="right" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="CallExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="CallExpression"/>
    <Field Name="operand" Type="ExpressionSyntax"/>
    <Field Name="argumentList" Type="ArgumentListSyntax"/>
  </Node>
  <Node Name="CastExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="CastExpression"/>
    <Field Name="openParenthesis" Type="SyntaxToken" Optional="True">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="type" Type="TypeSyntax"/>
    <Field Name="closeParenthesis" Type="SyntaxToken" Optional="True">
      <Kind Name="CloseParenToken"/>
    </Field>
    <Field Name="expression" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="ObjectCreationExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ObjectCreationExpression"/>
    <Field Name="newKeyword" Type="SyntaxToken">
      <Kind Name="NewKeyword"/>
    </Field>
    <Field Name="type" Type="TypeSyntax"/>
    <Field Name="argumentList" Type="ArgumentListSyntax"/>
  </Node>
  <Node Name="EmptyExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="EmptyExpression"/>
    <Field Name="artificalLocation" Type="SyntaxToken" Optional="True"/>
  </Node>
  <Node Name="IndexExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="IndexExpression"/>
    <Field Name="operand" Type="ExpressionSyntax"/>
    <Field Name="openBracket" Type="SyntaxToken" Optional="True"/>
    <Field Name="index" Type="ExpressionSyntax"/>
    <Field Name="closeBracket" Type="SyntaxToken" Optional="True">
      <Kind Name="CloseBracketToken"/>
    </Field>
  </Node>
  <Node Name="InitializerListExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="LiteralExpression"/>
    <Field Name="openBrace" Type="SyntaxToken" Optional="True">
      <Kind Name="OpenBraceToken"/>
    </Field>
    <Field Name="items" Type="SeparatedSyntaxList&lt;ExpressionSyntax&gt;"/>
    <Field Name="closeBrace" Type="SyntaxToken" Optional="True">
      <Kind Name="CloseBraceToken"/>
    </Field>
  </Node>
  <Node Name="LiteralExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="LiteralExpression"/>
    <Field Name="token" Type="SyntaxToken"/>
  </Node>
  <Node Name="MemberAccessExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="MemberAccessExpression"/>
    <Field Name="operand" Type="ExpressionSyntax"/>
    <Field Name="op" Type="SyntaxToken"/>
    <Field Name="identifier" Type="SyntaxToken" Optional="True">
      <Kind Name="IdentifierToken"/>
    </Field>
  </Node>
  <Node Name="IdentifierNameExpressionSyntax" Base="NameExpressionSyntax">
    <Kind Name="IdentifierNameExpression"/>
    <Field Name="identifier" Type="SyntaxToken" Override="true">
      <Kind Name="IdentifierToken"/>
    </Field>
  </Node>
  <Node Name="TemplateNameExpressionSyntax" Base="NameExpressionSyntax">
    <Kind Name="TemplateNameExpression"/>
    <Field Name="identifier" Type="SyntaxToken" Override="true">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="templateArgumentList" Type="TemplateArgumentListSyntax"/>
  </Node>
  <Node Name="ParenthesisExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ParenthesizedExpression"/>
    <Field Name="openParenthesis" Type="SyntaxToken" Optional="True">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="expression" Type="ExpressionSyntax"/>
    <Field Name="closeParenthesis" Type="SyntaxToken" Optional="True">
      <Kind Name="CloseParenToken"/>
    </Field>
  </Node>
  <Node Name="PostfixExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="PostfixExpression"/>
    <Field Name="operand" Type="ExpressionSyntax"/>
    <Field Name="op" Type="SyntaxToken"/>
  </Node>
  <Node Name="PrefixExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="PrefixExpression"/>
    <Field Name="op" Type="SyntaxToken"/>
    <Field Name="operand" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="ReferenceExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ReferenceExpression"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="RefKeyword"/>
    </Field>
    <Field Name="identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken"/>
    </Field>
  </Node>
  <Node Name="TernaryExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="TernaryExpression"/>
    <Field Name="left" Type="ExpressionSyntax"/>
    <Field Name="leftOp" Type="SyntaxToken"/>
    <Field Name="center" Type="ExpressionSyntax"/>
    <Field Name="rightOp" Type="SyntaxToken"/>
    <Field Name="right" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="TypeOfExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="TypeOfExpression"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="TypeOfKeyword"/>
    </Field>
    <Field Name="openParenthesis" Type="SyntaxToken">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="type" Type="TypeSyntax"/>
    <Field Name="closeParenthesis" Type="SyntaxToken">
      <Kind Name="CloseParenToken"/>
    </Field>
  </Node>
  <Node Name="UnaryExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="UnaryExpression"/>
    <Field Name="op" Type="SyntaxToken"/>
    <Field Name="operand" Type="ExpressionSyntax"/>
  </Node>
  <!-- Statements -->
  <Node Name="BlockStatementSyntax" Base="StatementSyntax">
    <Kind Name="BlockStatement"/>
    <Field Name="openBrace" Type="SyntaxToken">
      <Kind Name="OpenBraceToken"/>
    </Field>
    <Field Name="statements" Type="SyntaxList&lt;StatementSyntax&gt;"/>
    <Field Name="closeBrace" Type="SyntaxToken">
      <Kind Name="CloseBraceToken"/>
    </Field>
  </Node>
  <Node Name="BreakStatementSyntax" Base="StatementSyntax">
    <Kind Name="BreakStatement"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="BreakKeyword"/>
    </Field>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="ContinueStatementSyntax" Base="StatementSyntax">
    <Kind Name="ContinueStatement"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="ContinueKeyword"/>
    </Field>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="DoWhileStatementSyntax" Base="StatementSyntax">
    <Kind Name="DoWhileStatement"/>
    <Field Name="doKeyword" Type="SyntaxToken">
      <Kind Name="DoKeyword"/>
    </Field>
    <Field Name="body" Type="StatementSyntax"/>
    <Field Name="whileKeyword" Type="SyntaxToken">
      <Kind Name="WhileKeyword"/>
    </Field>
    <Field Name="openParenthesis" Type="SyntaxToken">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="condition" Type="ExpressionSyntax"/>
    <Field Name="closeParenthesis" Type="SyntaxToken">
      <Kind Name="CloseParenToken"/>
    </Field>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="ExpressionStatementSyntax" Base="StatementSyntax">
    <Kind Name="ExpressionStatement"/>
    <Field Name="expression" Type="ExpressionSyntax" Optional="True"/>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="ForStatementSyntax" Base="StatementSyntax">
    <Kind Name="ForStatement"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="ForKeyword"/>
    </Field>
    <Field Name="openParenthesis" Type="SyntaxToken">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="initializer" Type="StatementSyntax"/>
    <Field Name="condition" Type="ExpressionSyntax"/>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
    <Field Name="step" Type="ExpressionSyntax"/>
    <Field Name="closeParenthesis" Type="SyntaxToken">
      <Kind Name="CloseParenToken"/>
    </Field>
    <Field Name="body" Type="StatementSyntax"/>
  </Node>
  <Node Name="IfStatementSyntax" Base="StatementSyntax">
    <Kind Name="IfStatement"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="IfKeyword"/>
    </Field>
    <Field Name="openParenthesis" Type="SyntaxToken">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="condition" Type="ExpressionSyntax"/>
    <Field Name="closeParenthesis" Type="SyntaxToken">
      <Kind Name="CloseParenToken"/>
    </Field>
    <Field Name="then" Type="StatementSyntax"/>
    <Field Name="elseClause" Type="ElseClauseSyntax" Optional="True"/>
  </Node>
  <Node Name="LocalFunctionStatementSyntax" Base="StatementSyntax">
    <Kind Name="LocalFunctionStatement"/>
    <Field Name="returnType" Type="TypeSyntax"/>
    <Field Name="identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="parameterList" Type="ParameterListSyntax"/>
    <Field Name="body" Type="BlockStatementSyntax"/>
  </Node>
  <Node Name="ReturnStatementSyntax" Base="StatementSyntax">
    <Kind Name="ReturnStatement"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="ReturnKeyword"/>
    </Field>
    <Field Name="expression" Type="ExpressionSyntax" Optional="True"/>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="TryStatementSyntax" Base="StatementSyntax">
    <Kind Name="TryStatement"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="TryKeyword"/>
    </Field>
    <Field Name="body" Type="BlockStatementSyntax"/>
    <Field Name="catchClause" Type="CatchClauseSyntax" Optional="True"/>
    <Field Name="finallyClause" Type="FinallyClauseSyntax" Optional="True"/>
  </Node>
  <Node Name="VariableDeclarationStatementSyntax" Base="StatementSyntax">
    <Kind Name="VariableDeclarationStatement"/>
    <Field Name="type" Type="TypeSyntax"/>
    <Field Name="identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="equals" Type="SyntaxToken" Optional="True"/>
    <Field Name="initializer" Type="ExpressionSyntax" Optional="True"/>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="WhileStatementSyntax" Base="StatementSyntax">
    <Kind Name="WhileStatement"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="WhileKeyword"/>
    </Field>
    <Field Name="openParenthesis" Type="SyntaxToken">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="condition" Type="ExpressionSyntax"/>
    <Field Name="closeParenthesis" Type="SyntaxToken">
      <Kind Name="CloseParenToken"/>
    </Field>
    <Field Name="body" Type="StatementSyntax"/>
  </Node>
</Tree>
