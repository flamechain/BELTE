
namespace Buckle {

enum CompilerStage {
    raw,
    preprocessed,
    compiled,
    assembled,
    linked,
}

class FileState {
    string in_filename;
    CompilerStage stage;
    string out_filename = "";

    inline class FileContent {
        string[] lines;
        byte[] bytes;
    };

}

class CompilerState {
    CompilerStage finish_stage;
    string link_output = "";
    byte[] link_content;
    FileState[] tasks;
}

/// Cleans up resources on error
void clean_up_early_exit() { }

/// Cleans up resources on compilation finish
void clean_up_normal_exit() {
    if (state.finish_stage == CompilerStage.linked) {
        File.WriteAllBytes(state.link_output, state.link_content);
        return;
    }

    for (FileState file : state.tasks) {
        if (File.stage == state.finish_stage) {
            if (file.stage == CompilerStage.assembled) {
                File.WriteAllBytes(file.out_filename, file.FileContent.bytes);
            } else {
                File.WriteAllLines(file.out_filename, file.FileContent.lines);
            }
        }
    }
}
