
namespace Buckle {

CompilerState state;
string me;

/// entry point, takes in command-line arguments
/// controls flow of compiler and calls modules
/// @param argc argument count
/// @param argv arguments
/// @return error
int main(string[] args) {
    extract_name_and_expand(args);

    decode_options(args);
    check_errors();

    produce_output_filenames();
    clean_output_files();

    Preprocessor.preprocess();
    check_errors();

    if (state.finish_stage == CompilerState.compiled) {
        clean_up_normal_exit();
        return SUCCESS_EXIT_CODE;
    }

    Compiler.compile();
    check_errors();

    if (state.finish_stage == CompilerStage.compiled) {
        clean_up_normal_exit();
        return SUCCESS_EXIT_CODE;
    }

    Assembler.assemble();
    check_errors();

    if (state.finish_stage == CompilerStage.assembled) {
        clean_up_normal_exit();
        return SUCCESS_EXIT_CODE;
    }

    Linker.link();
    check_errors();

    if (state.finish_stage == CompilerStage.linked) {
        clean_up_normal_exit();
        return SUCCESS_EXIT_CODE;
    }

    return FATAL_EXIT_CODE;
}

}
